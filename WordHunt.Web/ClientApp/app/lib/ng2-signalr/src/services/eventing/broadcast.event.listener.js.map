{"version":3,"file":"broadcast.event.listener.js","sourceRoot":"","sources":["../../../../src/services/eventing/broadcast.event.listener.ts"],"names":[],"mappings":";;;;;OAAO,EAAE,OAAO,EAAE,MAAM,cAAc;AACtC;IAA+C,0CAAU;IACzD;;OAEG;IACH,gCAAmB,KAAa;QACxB,iBAAO,CAAC;QADG,UAAK,GAAL,KAAK,CAAQ;QAExB,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC;QACpG,CAAC;IACL,CAAC;IACL,6BAAC;AAAD,CAAC,AAVD,CAA+C,OAAO,GAUrD;AAED;IACA,gBAAgB;IAChB,sBAAsB,CAAC,SAAS,CAAC,KAAK,CAAC;AACvC,CAAC","sourcesContent":["import { Subject } from 'rxjs/Subject';\nexport class BroadcastEventListener<T> extends Subject<T> {\n/**\n * @param {?} event\n */\nconstructor(public event: string) {\r\n        super();\r\n        if (event == null || event === '') {\r\n            throw new Error('Failed to create BroadcastEventListener. Argument \\'event\\' can not be empty');\r\n        }\r\n    }\r\n}\n\nfunction BroadcastEventListener_tsickle_Closure_declarations() {\n/** @type {?} */\nBroadcastEventListener.prototype.event;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}