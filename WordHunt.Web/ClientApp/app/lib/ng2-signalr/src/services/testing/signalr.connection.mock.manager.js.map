{"version":3,"file":"signalr.connection.mock.manager.js","sourceRoot":"","sources":["../../../../src/services/testing/signalr.connection.mock.manager.ts"],"names":[],"mappings":"OAAO,EAAE,OAAO,EAAE,MAAM,cAAc;OAC/B,EAAE,qBAAqB,EAAuB,MAAM,2BAA2B;AAGtF;IAKA;QACQ,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAO,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAoB,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5F,CAAC;IAIL,sBAAI,8CAAI;QAHR;;WAEG;aACH;YACQ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAIL,sBAAI,iDAAO;QAHX;;WAEG;aACH;YACQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;;;OAAA;IAIL,sBAAI,iDAAO;QAHX;;WAEG;aACH;YACQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;;;OAAA;IAIL,sBAAI,mDAAS;QAHb;;WAEG;aACH;YACQ,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IACL,mCAAC;AAAD,CAAC,AAnCD,IAmCC;AAED;IACA,gBAAgB;IAChB,4BAA4B,CAAC,SAAS,CAAC,QAAQ,CAAC;IAChD,gBAAgB;IAChB,4BAA4B,CAAC,SAAS,CAAC,QAAQ,CAAC;IAChD,gBAAgB;IAChB,4BAA4B,CAAC,SAAS,CAAC,OAAO,CAAC;IAC/C,gBAAgB;IAChB,4BAA4B,CAAC,SAAS,CAAC,UAAU,CAAC;AAClD,CAAC","sourcesContent":["import { Subject } from 'rxjs/Subject';\r\nimport { SignalRConnectionMock, IListenerCollection } from './signalr.connection.mock';\r\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\r\nimport { ConnectionStatus } from '../connection/connection.status';\nexport class SignalRConnectionMockManager {\nprivate _status$: Subject<ConnectionStatus>;\nprivate _errors$: Subject<any>;\nprivate _object: SignalRConnectionMock;\npublic _listeners: IListenerCollection;\nconstructor() {\r\n        this._errors$ = new Subject<any>();\r\n        this._status$ = new Subject<ConnectionStatus>();\r\n        this._listeners = {};\r\n        this._object = new SignalRConnectionMock(this._errors$, this._status$, this._listeners);\r\n    }\n/**\n * @return {?}\n */\nget mock(): SignalRConnectionMock {\r\n        return this._object;\r\n    }\n/**\n * @return {?}\n */\nget errors$(): Subject<any> {\r\n        return this._errors$;\r\n    }\n/**\n * @return {?}\n */\nget status$(): Subject<ConnectionStatus> {\r\n        return this._status$;\r\n    }\n/**\n * @return {?}\n */\nget listeners(): IListenerCollection {\r\n        return this._listeners;\r\n    }\r\n}\n\nfunction SignalRConnectionMockManager_tsickle_Closure_declarations() {\n/** @type {?} */\nSignalRConnectionMockManager.prototype._status$;\n/** @type {?} */\nSignalRConnectionMockManager.prototype._errors$;\n/** @type {?} */\nSignalRConnectionMockManager.prototype._object;\n/** @type {?} */\nSignalRConnectionMockManager.prototype._listeners;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}