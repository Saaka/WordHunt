{"version":3,"file":"signalr.connection.mock.js","sourceRoot":"","sources":["../../../../src/services/testing/signalr.connection.mock.ts"],"names":[],"mappings":"OAIO,EAAE,sBAAsB,EAAE,MAAM,sCAAsC;AAQ7E;IACA;;;;OAIG;IACH,+BACQ,YAA0B,EAC1B,YAAuC,EACvC,UAA+B;QAF/B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAA2B;QACvC,eAAU,GAAV,UAAU,CAAqB;IACnC,CAAC;IAIL,sBAAI,yCAAM;QAHV;;WAEG;aACH;YACQ,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;;;OAAA;IAIL,sBAAI,yCAAM;QAHV;;WAEG;aACH;YACQ,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;;;OAAA;IAIL,sBAAI,qCAAE;QAHN;;WAEG;aACH;YACQ,MAAM,CAAC,8BAA8B,CAAC;QAC1C,CAAC;;;OAAA;IACL;;OAEG;IACI,oCAAI,GAAX;IACI,CAAC;IACL;;OAEG;IACI,qCAAK,GAAZ;QACQ,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,kBAAkB;IACpD,CAAC;IACL;;;;OAIG;IACI,sCAAM,GAAb,UAAc,MAAc;QAAE,oBAAoB;aAApB,WAAoB,CAApB,sBAAoB,CAApB,IAAoB;YAApB,mCAAoB;;QAC1C,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IACL;;;OAGG;IACI,sCAAM,GAAb,UAAiB,QAAmC;QAC5C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;IAC/C,CAAC;IACL;;;OAGG;IACI,yCAAS,GAAhB,UAAoB,KAAa;QACzB,IAAI,gBAAgB,CAAC,QAAQ,GAAG,IAAI,sBAAsB,CAAI,KAAK,CAAC,CAAC;QACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACtB,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IACL,4BAAC;AAAD,CAAC,AAhED,IAgEC;AAED;IACA,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,YAAY,CAAC;IAC7C,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,YAAY,CAAC;IAC7C,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,UAAU,CAAC;AAC3C,CAAC","sourcesContent":["import { Observable } from 'rxjs/Observable';\r\nimport { AsyncSubject } from 'rxjs/AsyncSubject';\r\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\r\nimport { SignalRConfiguration } from '../signalr.configuration';\r\nimport { BroadcastEventListener } from '../eventing/broadcast.event.listener';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { ConnectionStatus } from '../connection/connection.status';\r\nimport { ISignalRConnection } from '../connection/i.signalr.connection';\r\n\r\nexport interface IListenerCollection {\r\n    [name: string]: BroadcastEventListener<any>;\r\n}\nexport class SignalRConnectionMock implements ISignalRConnection {\n/**\n * @param {?} _mockErrors$\n * @param {?} _mockStatus$\n * @param {?} _listeners\n */\nconstructor(\nprivate _mockErrors$: Subject<any>,\nprivate _mockStatus$: Subject<ConnectionStatus>,\nprivate _listeners: IListenerCollection) {\r\n    }\n/**\n * @return {?}\n */\nget errors(): Observable<any> {\r\n        return this._mockErrors$;\r\n    }\n/**\n * @return {?}\n */\nget status(): Observable<ConnectionStatus> {\r\n        return this._mockStatus$;\r\n    }\n/**\n * @return {?}\n */\nget id(): string {\r\n        return 'xxxxxxxx-xxxx-xxxx-xxxxxxxxx';\r\n    }\n/**\n * @return {?}\n */\npublic stop(): void {\r\n    }\n/**\n * @return {?}\n */\npublic start(): Promise<any> {\r\n        return Promise.resolve(null); // TODO: implement\r\n    }\n/**\n * @param {?} method\n * @param {...?} parameters\n * @return {?}\n */\npublic invoke(method: string, ...parameters: any[]): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\n/**\n * @param {?} listener\n * @return {?}\n */\npublic listen<T>(listener: BroadcastEventListener<T>): void {\r\n        this._listeners[listener.event] = listener;\r\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic listenFor<T>(event: string): BroadcastEventListener<T> {\r\n        let /** @type {?} */ listener = new BroadcastEventListener<T>(event);\r\n        this.listen(listener);\r\n        return listener;\r\n    }\r\n}\n\nfunction SignalRConnectionMock_tsickle_Closure_declarations() {\n/** @type {?} */\nSignalRConnectionMock.prototype._mockErrors$;\n/** @type {?} */\nSignalRConnectionMock.prototype._mockStatus$;\n/** @type {?} */\nSignalRConnectionMock.prototype._listeners;\n}\n\r\n\r\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}