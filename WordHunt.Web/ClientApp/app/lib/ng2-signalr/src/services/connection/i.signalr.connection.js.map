{"version":3,"file":"i.signalr.connection.js","sourceRoot":"","sources":["../../../../src/services/connection/i.signalr.connection.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from 'rxjs/Observable';\r\nimport { SignalRConfiguration } from '../signalr.configuration';\r\nimport { BroadcastEventListener } from '../eventing/broadcast.event.listener';\r\nimport { ConnectionStatus } from './connection.status';\r\n\r\nexport interface ISignalRConnection {\r\n    readonly status: Observable<ConnectionStatus>;\r\n    readonly errors: Observable<any>;\r\n    readonly id: string;\r\n    invoke(method: string, ...parameters: any[]): Promise<any>;\r\n    listen<T>(listener: BroadcastEventListener<T>): void;\r\n    listenFor<T>(listener: string): BroadcastEventListener<T>;\r\n    stop(): void;\r\n    start(): Promise<any>;\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}